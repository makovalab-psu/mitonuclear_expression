#!/bin/bash
#SBATCH --job-name=plink_qc
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=60000
#SBATCH --time=0-80:00:00
#SBATCH --mail-type=END
#SBATCH --mail-user=ejt89@psu.edu
#SBATCH --chdir=/nfs/secure/scratch6/nekrut_gtex/ejt89/mito_gtex/bin/B_globalAnc/GlobalAnc_v8
#SBATCH --output=/nfs/secure/scratch6/nekrut_gtex/ejt89/mito_gtex/bin/B_globalAnc/GlobalAnc_v8/log/ejt89-plink_qc-%j.out
#SBATCH --error=/nfs/secure/scratch6/nekrut_gtex/ejt89/mito_gtex/bin/B_globalAnc/GlobalAnc_v8/log/ejt89-plink_qc-%j.err

echo "Job started"; date "+%Y-%m-%d.%H:%M:%S"
export CONDA_ENVS_PATH=/home/ejt89/.conda/envs
source /opt/anaconda/etc/profile.d/conda.sh
conda activate /home/ejt89/.conda/envs/ancestry
#source activate /home/ejt89/.conda/envs/ancestry
#conda activate ancestry
conda info --envs
conda list

##########################################
# GTEx: Perform within-dataset QC steps. #
##########################################

# Stop on any errors and print all commands.
set -uex

#if [ -z "$1" ]; then echo "###   ARGUMENT NEEDED: Provide chromosome   ###"; fi
chr=ALL
	# Arguments fed to PLINK.
	prefix=GTEX-WGS-${chr}_hg19
cd gtex_wgs_v8
cd ${chr}


# Filter by Minor Allele Freq, Genotype missingness across samples, and keep non-palindromic sites.
# Keep only AfAm and EuAm individuals.
# Did NOT filter by individual missingness (--mind 0.2)
plink --noweb --bfile ${prefix} \
	--maf 0.01 --geno 0.2 \
	--keep ../../ids_aa_ea_GTEx_v8.plink \
	--biallelic-only strict \
	--make-bed --out ${prefix}_filtered


# Identify the non-palindromic SNPs.
Rscript ../../rm_palindromic.R ${prefix}.bim
plink --noweb --bfile ${prefix} \
	--extract list.nonpalindromic.snps \
	--make-bed --out ${prefix}_filtered_nopal


# Test heterozygosity (exclude contaminated markers).
plink --bfile ${prefix}_filtered \
	--het \
	--out ${prefix}_het
	# Need to create 'bad.snps' and 'bad.samples' file from ${prefix}_het.het

	# Plot Fst value and calculate cutoff (+5*SD).
	Rscript ../../makeplot_het.R ${prefix}_het.het > cutoff.txt
	# Use cutoff to identify samples that should be excluded (must fix cutoff).
	cat ${prefix}_het.het | awk -v cutoff=`cat cutoff.txt` '$6 > cutoff' > bad.samples

	# Exclude markers and/or individuals from previous step.
	#plink --bfile ${prefix}_filtered \
	#	--remove bad.samples --exclude bad.snps \
	#	--make-bed --out ${prefix}_filtered_cleaned


# Prune.
# List of sites to prune.
plink --bfile ${prefix}_filtered_nopal \
	--indep 50 5 2 --allow-no-sex \
	--out ${prefix}_filtered_nopal_prune
# Keep that list of pruned sites.
plink --bfile ${prefix}_filtered_nopal \
	--maf 0.01 --geno 0.1 --mind 0.1 \
	--extract ${prefix}_filtered_nopal_prune.prune.in \
	--make-bed --out ${prefix}_filtered_pruned


# Generate IBS values (for pop startification).
plink --bfile ${prefix}_filtered_pruned \
        --genome \
        --out ${prefix}_genome


# Generate MDS clustering.
plink --bfile ${prefix}_filtered_pruned \
        --read-genome ${prefix}_genome.genome --cluster --K 2 --mds-plot 4 \
        --out ${prefix}_mds


# Create plots.
Rscript ../../makeplot_mds.R ${prefix}_mds.mds "GTEX"





echo "Job ended"; date "+%Y-%m-%d.%H:%M:%S"


